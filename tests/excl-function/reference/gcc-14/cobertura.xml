<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE coverage SYSTEM 'http://cobertura.sourceforge.net/xml/coverage-04.dtd'>
<coverage line-rate="1.0" branch-rate="0.8" lines-covered="14" lines-valid="14" branches-covered="8" branches-valid="10" complexity="0.0" timestamp="0" version="gcovr 8.3">
  <sources>
    <source>tests/excl-function</source>
  </sources>
  <packages>
    <package name="" line-rate="1.0" branch-rate="0.8" complexity="0.0">
      <classes>
        <class name="main_cpp" filename="main.cpp" line-rate="1.0" branch-rate="0.8" complexity="0.0">
          <methods>
            <method name="sort_excluded" signature="()" line-rate="1.0" branch-rate="1.0" complexity="0.0">
              <lines>
                <line number="44" hits="44" branch="true" condition-coverage="100% (2/2)">
                  <conditions>
                    <condition number="0" type="jump" coverage="100%"/>
                  </conditions>
                </line>
                <line number="45" hits="44" branch="true" condition-coverage="100% (2/2)">
                  <conditions>
                    <condition number="0" type="jump" coverage="100%"/>
                  </conditions>
                </line>
              </lines>
            </method>
            <method name="sort_excluded_both" signature="()" line-rate="1.0" branch-rate="1.0" complexity="0.0">
              <lines/>
            </method>
            <method name="sort_lambda_excluded" signature="()" line-rate="1.0" branch-rate="0.5" complexity="0.0">
              <lines>
                <line number="48" hits="1" branch="false"/>
                <line number="52" hits="1" branch="false"/>
                <line number="54" hits="2" branch="true" condition-coverage="50% (1/2)">
                  <conditions>
                    <condition number="0" type="jump" coverage="50%"/>
                  </conditions>
                </line>
                <line number="64" hits="1" branch="false"/>
              </lines>
            </method>
            <method name="bar" signature="(int)" line-rate="1.0" branch-rate="1.0" complexity="0.0">
              <lines/>
            </method>
            <method name="foo" signature="(int)" line-rate="1.0" branch-rate="1.0" complexity="0.0">
              <lines/>
            </method>
            <method name="sort_excluded" signature="()::{lambda(int, int)#2}::operator()(int, int) const" line-rate="1.0" branch-rate="1.0" complexity="0.0">
              <lines/>
            </method>
            <method name="sort_excluded" signature="()::{lambda(int, int)#1}::operator()(int, int) const" line-rate="1.0" branch-rate="1.0" complexity="0.0">
              <lines/>
            </method>
            <method name="sort_excluded_both" signature="()::{lambda(int, int)#2}::operator()(int, int) const" line-rate="1.0" branch-rate="1.0" complexity="0.0">
              <lines/>
            </method>
            <method name="sort_excluded_both" signature="()::{lambda(int, int)#1}::operator()(int, int) const" line-rate="1.0" branch-rate="1.0" complexity="0.0">
              <lines/>
            </method>
            <method name="sort_lambda_excluded" signature="()::{lambda(int, int)#2}::operator()(int, int) const" line-rate="1.0" branch-rate="1.0" complexity="0.0">
              <lines/>
            </method>
            <method name="sort_lambda_excluded" signature="()::{lambda(int, int)#1}::operator()(int, int) const" line-rate="1.0" branch-rate="0.75" complexity="0.0">
              <lines>
                <line number="50" hits="44" branch="true" condition-coverage="75% (3/4)">
                  <conditions>
                    <condition number="0" type="jump" coverage="75%"/>
                  </conditions>
                </line>
              </lines>
            </method>
            <method name="main" signature="()" line-rate="1.0" branch-rate="1.0" complexity="0.0">
              <lines>
                <line number="95" hits="1" branch="false"/>
                <line number="96" hits="1" branch="false"/>
                <line number="97" hits="1" branch="false"/>
                <line number="99" hits="1" branch="false"/>
                <line number="100" hits="1" branch="false"/>
                <line number="101" hits="1" branch="false"/>
                <line number="103" hits="1" branch="false"/>
              </lines>
            </method>
          </methods>
          <lines>
            <line number="44" hits="44" branch="true" condition-coverage="100% (2/2)">
              <conditions>
                <condition number="0" type="jump" coverage="100%"/>
              </conditions>
            </line>
            <line number="45" hits="44" branch="true" condition-coverage="100% (2/2)">
              <conditions>
                <condition number="0" type="jump" coverage="100%"/>
              </conditions>
            </line>
            <line number="48" hits="1" branch="false"/>
            <line number="50" hits="44" branch="true" condition-coverage="75% (3/4)">
              <conditions>
                <condition number="0" type="jump" coverage="75%"/>
              </conditions>
            </line>
            <line number="52" hits="1" branch="false"/>
            <line number="54" hits="2" branch="true" condition-coverage="50% (1/2)">
              <conditions>
                <condition number="0" type="jump" coverage="50%"/>
              </conditions>
            </line>
            <line number="64" hits="1" branch="false"/>
            <line number="95" hits="1" branch="false"/>
            <line number="96" hits="1" branch="false"/>
            <line number="97" hits="1" branch="false"/>
            <line number="99" hits="1" branch="false"/>
            <line number="100" hits="1" branch="false"/>
            <line number="101" hits="1" branch="false"/>
            <line number="103" hits="1" branch="false"/>
          </lines>
        </class>
      </classes>
    </package>
  </packages>
</coverage>
